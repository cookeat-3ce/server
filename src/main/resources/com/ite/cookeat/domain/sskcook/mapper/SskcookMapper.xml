<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ite.cookeat.domain.sskcook.mapper.SskcookMapper">
  <select id="selectSearchRecentSskcookList" parameterType="Map"
    resultType="GetSearchSskcookRes">
        <![CDATA[
    SELECT a.sskcook_url as sskcookUrl,
           a.sskcook_id  as sskcookId,
           a.regdate,
           b.nickname,
           a.member_id,
           a.title
    FROM (SELECT s.title,
                 s.sskcook_url,
                 s.sskcook_id,
                 s.regdate,
                 s.member_id,
                 s.status,
                 ROW_NUMBER() OVER (ORDER BY s.regdate DESC) as row_num
          FROM sskcook s
          WHERE LOWER(s.title) LIKE '%' || LOWER(#{keyword}) || '%'
            AND s.status = 'ACTIVE') a
           INNER JOIN member b ON a.member_id = b.member_id
    ORDER BY a.regdate DESC
    OFFSET (#{cri.pageNum} - 1) * #{cri.pageSize} ROWS FETCH NEXT #{cri.pageSize} ROWS ONLY
    ]]>
    </select>
  <select id="selectSearchSskcookListCount" parameterType="String" resultType="Integer">
    <![CDATA[
    SELECT COUNT(a.sskcook_id)
    FROM sskcook a
           INNER JOIN member b ON a.member_id = b.member_id
    WHERE LOWER(a.title) LIKE '%' || LOWER(#{keyword}) || '%'
      AND a.status = 'ACTIVE'
    ]]>
  </select>
  <select id="selectSearchLikesSskcookList" parameterType="Map"
    resultType="GetSearchSskcookRes">
        <![CDATA[
    SELECT c.sskcook_url        AS sskcookUrl,
           c.sskcook_id         AS sskcookId,
           c.regdate,
           b.nickname,
           c.member_id,
           c.title,
           NVL(a.countLikes, 0) AS countLikes
    FROM (SELECT sskcook_id,
                 sskcook_url,
                 title,
                 regdate,
                 member_id,
                 status
          FROM sskcook
          WHERE LOWER(title) LIKE '%' || LOWER(#{keyword}) || '%'
            AND status = 'ACTIVE') c
           LEFT JOIN (SELECT COUNT(sskcook_id) AS countLikes,
                             sskcook_id
                      FROM likes
                      GROUP BY sskcook_id) a ON a.sskcook_id = c.sskcook_id
           INNER JOIN member b ON b.member_id = c.member_id
    ORDER BY countLikes DESC, c.regdate DESC
    OFFSET (#{cri.pageNum} - 1) * #{cri.pageSize} ROWS FETCH NEXT #{cri.pageSize} ROWS ONLY
    ]]>
    </select>
  <select id="selectRecentSskcookList" parameterType="Map"
    resultType="GetSearchSskcookRes">
        <![CDATA[
    SELECT a.sskcook_url as sskcookUrl,
           a.sskcook_id  as sskcookId,
           a.title,
           a.regdate,
           a.member_id,
           b.nickname,
           b.profile_img
    FROM sskcook a
           INNER JOIN member b ON a.member_id = b.member_id
    WHERE a.status = 'ACTIVE'
    ORDER BY a.regdate DESC
    OFFSET (#{cri.pageNum} - 1) * #{cri.pageSize} ROWS FETCH NEXT #{cri.pageSize} ROWS ONLY
    ]]>
    </select>
  <select id="selectRecentSskcookListCount" resultType="Integer">
  <![CDATA[
    SELECT COUNT(a.sskcook_id)
    FROM sskcook a
           INNER JOIN member b ON a.member_id = b.member_id
      AND a.status = 'ACTIVE'
    ]]>
  </select>
  <select id="selectMonthlySskcookList" parameterType="Map"
    resultType="GetSearchSskcookRes">
<![CDATA[
    SELECT c.sskcook_url        AS sskcookUrl,
           c.sskcook_id         AS sskcookId,
           c.regdate,
           b.nickname,
           c.member_id,
           c.title,
           NVL(a.countLikes, 0) AS countLikes
    FROM (SELECT sskcook_id,
                 sskcook_url,
                 title,
                 regdate,
                 member_id,
                 status
          FROM sskcook
          WHERE TO_CHAR(regdate, 'yyyy-mm') = #{date}
            AND status = 'ACTIVE') c
           LEFT JOIN (SELECT COUNT(sskcook_id) AS countLikes,
                             sskcook_id
                      FROM likes
                      GROUP BY sskcook_id) a
                     ON a.sskcook_id = c.sskcook_id
           INNER JOIN member b ON b.member_id = c.member_id
    ORDER BY countLikes DESC, c.regdate DESC
    OFFSET (#{cri.pageNum} - 1) * #{cri.pageSize} ROWS FETCH NEXT #{cri.pageSize} ROWS ONLY
    ]]>
  </select>
  <select id="selectMonthlySskcookListCount" parameterType="String" resultType="Integer">
    <![CDATA[
    SELECT COUNT(a.sskcook_id)
    FROM sskcook a
           INNER JOIN member b ON a.member_id = b.member_id
    WHERE TO_CHAR(a.regdate, 'yyyy-mm') = #{date}
      AND a.status = 'ACTIVE'
    ]]>
  </select>
  <select id="selectUserSskcookList" parameterType="Map" resultType="GetSearchSskcookRes">
    <![CDATA[
    SELECT c.sskcook_url        AS sskcookUrl,
           c.sskcook_id         AS sskcookId,
           c.title,
           b.nickname,
           NVL(a.countLikes, 0) AS countLikes
    FROM (SELECT sskcook_id,
                 sskcook_url,
                 title,
                 regdate,
                 member_id,
                 status
          FROM sskcook
          WHERE member_id IN (SELECT member_id
                              FROM member
                              WHERE username = #{username}
                                AND status = 'ACTIVE')
            AND status = 'ACTIVE') c
           LEFT JOIN (SELECT COUNT(sskcook_id) AS countLikes,
                             sskcook_id
                      FROM likes
                      GROUP BY sskcook_id) a ON a.sskcook_id = c.sskcook_id
           INNER JOIN member b ON b.member_id = c.member_id
    ORDER BY countLikes DESC, c.regdate DESC
    OFFSET (#{cri.pageNum} - 1) * #{cri.pageSize} ROWS FETCH NEXT #{cri.pageSize} ROWS ONLY
    ]]>
  </select>
  <select id="selectUserSskcookListCount" parameterType="String" resultType="Integer">
    <![CDATA[
    SELECT COUNT(a.sskcook_id)
    FROM sskcook a
           INNER JOIN member b ON a.member_id = b.member_id
    WHERE #{username} = b.username
    ]]>
  </select>

  <select id="selectTagSskcookList" parameterType="Map" resultType="GetSearchSskcookRes">
    <![CDATA[
    SELECT c.sskcook_url        AS sskcookUrl,
           c.sskcook_id         AS sskcookId,
           c.title,
           b.nickname,
           c.regdate,
           NVL(a.countLikes, 0) AS countLikes
    FROM sskcook c
           LEFT JOIN (SELECT COUNT(sskcook_id) AS countLikes,
                             sskcook_id
                      FROM likes
                      GROUP BY sskcook_id) a
                     ON a.sskcook_id = c.sskcook_id
           INNER JOIN member b ON b.member_id = c.member_id
    WHERE EXISTS (SELECT 1
                  FROM sskcook_hashtag sh
                         INNER JOIN hashtag h ON h.hashtag_id = sh.hashtag_id
                  WHERE sh.sskcook_id = c.sskcook_id
                    AND h.hashtag_name = #{tag})
    ORDER BY countLikes DESC, c.regdate DESC
    OFFSET (#{cri.pageNum} - 1) * #{cri.pageSize} ROWS FETCH NEXT #{cri.pageSize} ROWS ONLY
    ]]>
  </select>

  <select id="selectTagSskcookListCount" parameterType="String" resultType="Integer">
    <![CDATA[
    SELECT COUNT(c.sskcook_id)
    FROM sskcook c
    WHERE EXISTS (SELECT 1
                  FROM sskcook_hashtag sh
                         INNER JOIN hashtag h ON h.hashtag_id = sh.hashtag_id
                  WHERE sh.sskcook_id = c.sskcook_id
                    AND h.hashtag_name = #{tag})
    ]]>
  </select>

</mapper>