<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:security="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd">

  <!-- JWT Token Provider -->
  <bean class="com.ite.cookeat.security.jwt.JwtTokenProvider"
    id="jwtTokenProvider"/>

  <!-- JWT Authentication Entry Point -->
  <bean class="com.ite.cookeat.security.jwt.JwtAuthenticationEntryPoint"
    id="jwtAuthenticationEntryPoint"/>

  <!-- JWT Access Denied Handler -->
  <bean class="com.ite.cookeat.security.jwt.JwtAccessDeniedHandler"
    id="jwtAccessDeniedHandler"/>

  <!-- BCrypt Password Encoder -->
  <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"
    id="passwordEncoder"/>

  <!-- JWT Authentication Filter -->
  <bean class="com.ite.cookeat.security.jwt.JwtAuthenticationFilter"
    id="jwtAuthenticationFilter">
    <constructor-arg ref="jwtTokenProvider"/>
  </bean>

  <bean class="com.ite.cookeat.filter.CorsFilter" id="corsFilter"/>

  <bean class="com.ite.cookeat.security.PrincipalDetailsService"
    id="principalDetailsService"/>

  <bean class="com.ite.cookeat.security.CustomLogoutHandler" id="CustomLogoutHandler"/>

  <security:authentication-manager
    id="authenticationManager">
    <!-- 사용자 정보를 제공하는 서비스 등록 -->
    <security:authentication-provider
      user-service-ref="principalDetailsService">
      <security:password-encoder
        ref="passwordEncoder"/>

    </security:authentication-provider>
  </security:authentication-manager>

  <!-- AuthenticationManager 설정 -->
  <security:http auto-config="true" use-expressions="true">
    <security:access-denied-handler
      ref="jwtAccessDeniedHandler"/>

    <security:csrf disabled="true"/>
    <security:custom-filter
      position="PRE_AUTH_FILTER" ref="jwtAuthenticationFilter"/>

    <security:custom-filter before="CHANNEL_FILTER" ref="corsFilter"/>

    <security:intercept-url access="permitAll"
      pattern="/member/login"/>

    <security:intercept-url access="permitAll"
      pattern="/admin/**"/>


    <!-- 로그아웃 -->
    <security:intercept-url access="permitAll"
      pattern="/member/sign-up"/>

    <!-- Access denied handler 설정 -->
    <security:logout delete-cookies="JSESSIONID" invalidate-session="true"
      logout-url="/api/member/logout" success-handler-ref="CustomLogoutHandler"/>
  </security:http>

</beans>